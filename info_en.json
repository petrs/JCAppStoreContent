[{
	"name": "JCAlgTest",
	"title": "JCAlgTest",
	"icon": "jcalgtest.png",
  "latest": "1.7.5",
	"versions": [
		"1.2", "1.2.1", "1.3", "1.6", "1.6.1", "1.7", "1.7.1", "1.7.2", "1.7.3", "1.7.4", "1.7.5"
	],
  "builds": {
    "1.2": ["2.1.2", "2.2.1", "2.2.2"], 
    "1.2.1": ["2.1.2", "2.2.1", "2.2.2", "3.0.2", "3.0.4"], 
    "1.3": ["2.1.2", "2.2.1", "2.2.2", "3.0.2", "3.0.4"], 
    "1.6": ["2.2.2"], 
    "1.6.1": ["2.2.1", "2.2.2"], 
    "1.7": ["2.2.2"], 
    "1.7.1": ["2.2.1", "2.2.2"], 
    "1.7.2": ["2.2.2"], 
    "1.7.3": ["2.2.2"], 
    "1.7.4": ["2.2.2"], 
    "1.7.5": ["2.2.2"]
  },
	"author": "CRoCS",
	"description": "<p>Automated testing tool for algorithms supported by particular smart card with JavaCard platform.<br><br><i>Contribution with results for YOUR card is wanted! (and highly appreciated :))</i></p>",
	"url": "https://www.fi.muni.cz/~xsvenda/jcalgtest/",
	"usage": "<p>Install this applet on the card you want to test. You can install default (newest version and latest sdk). If the install fails, choose different, older sdk version as the card might not support it.<br><br><br>Run Java application AlgTestJClient. You need to download this application for your pc from GitHub (https://github.com/crocs-muni/JCAlgTest/releases). Once you download the application (AlgTestJClient.jar file inside zip release), and the card is plugged in, open command line (windows ctrl+R and type cmd). Navigate to the folder where you have downloaded the file and run following command: <b>java -jar AlgTestJClient.jar</b>. On Linux you might need to set the smartcardio library, for example use: 'java -Dsun.security.smartcardio.library=/usr/lib64/libpcsclite.so.1 -jar AlgTestJClient.jar'<br><br>Choose the target reader for card with uploaded AlgTest applet and let it run. Now new CSV file with values separated by the semicolon is created (AlgTest_ATR.csv).<br><br><br>Please consider to send us (petr@svenda.com) your results in case your card is not yet in the database at https://www.fi.muni.cz/~xsvenda/jcalgtest/</p><br><br><br>How to navigate in command line: use <b> cd [foldername you want to enter]</b> and <b>dir</b> on windows or <b>ls</b> on linux to display current foler content. Enclose the foldername in \" characters if any space is present.",
  "keys": false,
  "default_selected": false,
  "pgp": "",
  "signed_by": ""
}, {
	"name": "JCMemory",
	"title": "JCMemory",
	"icon": "jcmem.png",
  "latest": "1.0",
	"versions": [
		"1.0"
	],
  "builds": {
    "1.0": ["2.2.2"]
  },
	"author": "CRoCS",
	"description": "<p>Small applet for card memory analysis. Can obtain the amount of free memory space on given cards, which enables us to predict installation failures because of low memory.</p>",
	"url": "",
	"usage": "This applet is used by JCAppStore natively. You can obtain the free memory space available in 'File' menu item. The check is also performed on an applet installation.",
  "keys": false,
  "default_selected": false,
  "pgp": "",
  "signed_by": ""
}, {
	"name": "YkneoOpenPGP",
	"title": "YubiKey NEO App: OpenPGP",
	"icon": "ykneoopenpgp.png",
  "latest": "1.0.2",
	"versions": [
		"1.0.2"
	],
  "builds": {
    "1.0.2": ["2.2.1", "2.2.2"] 
  },
	"author": "Yubico",
	"description": "<p>This project implement the OpenPGP card functionality used on the YubiKey NEO device that is sold by Yubico.<br><br>This project is based on the Java Card OpenPGP Card project made by Joeri de Ruiter. The initial modifications we have made compared to the upstream project are minor, but we reserve the right to make other changes and improvements that are specific to the YubiKey NEO hardware.<br><br><b>License:</b> The upstream project was released under the GPLv2+ and our fork uses the same license. All of our changes are released under the same license. More on the website.</p>",
	"url": "https://developers.yubico.com/ykneo-openpgp/",
	"usage": "<p>The usage - altough with host application - may be difficult if you are not used to work with command line. (see the turorials in link below). The OpenPGP Card applet is typically used through GnuPG (https://www.gnupg.org/) so we refer to its documentation for the full reference. The default PIN set is <b>`123456'</b> and the default admin PIN is <b>`12345678'</b>. We have tutorials on specific topics in at developers.yubico.com/PGP, for example card editing and key import. <br><br> How to change your admin pin step by step: <ol><li>Download GnuPG (this is used by JCAppStore as well, so you probably have it)</li><li>Use command line to launch GnuPG in card edit mode: <b>gpg --card-edit</b></li><li>enter command <b>admin</b> to enable utility tools</li><li>enter command <b>passwd</b> to change your admin PIN</li></ol><br />Upload your private key to the card (<b> this is destructive action!</b>)<ol><li>use <b>gpg --list-keys</b> to see which keys you have available</li><li> type in <b>gpg --edit-key [key id]</b> where key id is an id for the key you want to move (id select from previous command)</li><li>use <b>toggle</b> to switch to the private key part</li><li> use <b>keytocard</b> to upload the private key part onto card <i>destructively</i></li><li>follow the GnuPG instructions</li></ol><br> That's it! For more info about available commands in card edit mode type <b>help</b>. Unfortunately, only RSA keys up to 1024 bit length are supported. <br> Full tutorials are available at <u>https://www.gnupg.org/documentation/guides.html</u>. <br><br> We recommend to search for 'GnuPG [action I want to do]' rather than reading the documentation, for example 'gnupg.org import key to card' yields <u>https://blog.josefsson.org/2014/06/23/offline-gnupg-master-key-and-subkeys-on-yubikey-neo-smartcard/</u>.",
  "keys": true,
  "default_selected": false,
  "pgp": "",
  "signed_by": ""
}]
